@page "/note/"
@page "/note/{NoteId:guid}"
@inject PrivateNoteSvc.PrivateNoteSvcClient Client
@inject NavigationManager NavigationManager
@inject ISnackbar Snackbar
@inject IJSRuntime JsInterop
@inject IStringLocalizer<Note> _Localizer;

<MudContainer Class="fill-height">

    <MudOverlay Visible="IsLoading" DarkBackground>
        <MudProgressCircular Color="Color.Secondary" Indeterminate Size="Size.Large"/>
    </MudOverlay>

    @if (NoteId == null)
    {
        @if (string.IsNullOrEmpty(NoteLink))
        {
            <MudGrid Spacing="2" Class="align-center">

                <MudItem xs="12">
                    <MudTextField Margin="Margin.Dense" Variant="Variant.Filled" Placeholder="@_Localizer["NoteSendMessagePlaceholder"]" @bind-Value="Message" Lines=8 Immediate DisableUnderLine />
                </MudItem>
                <MudItem xs="12" sm="4" md="3" lg="2">
                    <MudCheckBox @bind-Checked=IsEmbedPasswordMode @bind-Checked:after=AfterEmbededPassword Label="@_Localizer["EmbedPasswordLabel"]" Dense />
                </MudItem>
                <MudItem xs="12" sm="8" md="5" lg="4">
                    @if (IsEmbedPasswordMode)
                    {
                        <MudText Typo="Typo.caption" Color="Color.Warning">@_Localizer["EmbedPassworWarningMessage"]</MudText>
                    }
                    else
                    {
                        <MudTextField Margin="Margin.Dense" Variant="Variant.Outlined" @bind-Value="Password" @bind-Value:after=HideOnCustomPassword Label="@_Localizer["PasswordLabel"]" InputType="@PasswordInput" Adornment="Adornment.End" AdornmentIcon="@PasswordInputIcon" OnAdornmentClick="ShowHidePassword" AdornmentAriaLabel="@_Localizer["PasswordAdornmentAriaLabel"]" Immediate />
                    }
                </MudItem>
                <MudItem xs="12" sm="4" md="2" lg="3">
                    <MudNumericField Margin="Margin.Dense" Variant="Variant.Outlined" @bind-Value=HoursAvailable Label="@_Localizer["HoursAvailableLabel"]" Format="0" Min="1" Max="120" Adornment="Adornment.End" AdornmentIcon="@Icons.Material.Filled.LockClock" />
                </MudItem>
                <MudItem xs="12" sm="8" md="2" lg="3">
                    <MudButton Class="fill-height fill-width" Variant=Variant.Filled Color=Color.Primary StartIcon="@Icons.Material.Filled.Send" OnClick="SendNote" Disabled=@(string.IsNullOrWhiteSpace(Message) || string.IsNullOrWhiteSpace(Password))>@_Localizer["SendNoteButton"]</MudButton>
                </MudItem>

            </MudGrid>

        }
        else
        {
            <MudGrid Spacing="2">

                <MudItem xs="12">
                    <MudTextField ReadOnly Value="@NoteLink" Label="@_Localizer["ShareLinkMessage"]" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.ContentCopy" OnAdornmentClick="CopyNoteLinkToClipboard" />
                </MudItem>

            </MudGrid>
        }
    }
    else
    {
        <MudGrid Spacing="2">

            <MudItem xs="12" sm="9">
                <MudTextField Margin="Margin.Dense" Variant="Variant.Outlined" @bind-Value="Password" @bind-Value:after=HideOnCustomPassword Label="@_Localizer["PasswordLabel"]" InputType="@PasswordInput" Adornment="Adornment.End" AdornmentIcon="@PasswordInputIcon" OnAdornmentClick="ShowHidePassword" AdornmentAriaLabel="@_Localizer["PasswordAdornmentAriaLabel"]" Immediate Disabled=@(string.IsNullOrWhiteSpace(Message) == false) />
            </MudItem>
            <MudItem xs="12" sm="3">
                <MudButton Class="fill-height fill-width" Variant=Variant.Filled Color=Color.Primary StartIcon="@Icons.Material.Filled.LockOpen" OnClick="ReadNote" Disabled=@(string.IsNullOrWhiteSpace(Password) || string.IsNullOrWhiteSpace(Message) == false)>@_Localizer["ReadNoteButton"]</MudButton>
            </MudItem>

            <MudItem xs="12">
                <MudTextField Margin="Margin.Dense" Variant="Variant.Filled" Placeholder="@_Localizer["NoteReadMessagePlaceholder"]" Value="Message" Lines=8 ReadOnly Disabled=@(string.IsNullOrWhiteSpace(Message)) Adornment="Adornment.End" AdornmentIcon="@Icons.Material.Filled.ContentCopy" OnAdornmentClick="CopyNoteToClipboard" DisableUnderLine />
            </MudItem>

            @if (string.IsNullOrWhiteSpace(Message) == false)
            {
                <MudItem xs="12">
                    <MudText Typo="Typo.caption" Color="Color.Warning">@_Localizer["NoteReadWarningMessage"]</MudText>
                </MudItem>
            }

        </MudGrid>
    }

</MudContainer>